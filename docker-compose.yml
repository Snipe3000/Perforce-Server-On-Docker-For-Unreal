networks:
  perforce_network:
    driver: bridge
    #external: true

services:
  perforce:
    container_name: Perforce-Server
    hostname: perforce
    volumes:
      - /mnt/user/appdata/perforce-server/logs:/data/p4depot/logs
      - /mnt/user/Perforce/:/data
    ports:
      - "1666:1666"
    environment:
      - P4PORT=ssl:1666
      - P4SSLDIR=/data/p4depot/ssl
      - P4ROOT=/data/p4depot
      - P4USER=admin
      - P4USER=p4admin
      - P4PASSWD=pass12349ers!
    build:
      context: .
      dockerfile: Dockerfile
    #restart: unless-stopped  # Optional: Restart the container if it stops unexpectedly
    networks:
      - perforce_network
      
  helix-swarm:
    container_name: Perforce-Swarm
    image: perforce/helix-swarm:latest
    hostname: helix-swarm
    domainname: helix
    volumes:
      - /mnt/user/appdata/perforce-swarm/swarm-data:/opt/perforce/swarm/data
      - /mnt/user/appdata/perforce-swarm/www:/var/www
    ports:
      - "8089:80"
    working_dir: /opt/perforce/swarm
    depends_on:
      - helix-redis
      - perforce
    tty: false
    environment:
      - P4D_PORT=ssl:192.168.1.238:1666
      - P4D_SUPER=p4admin
      - P4D_SUPER_PASSWD=pass12349ers!
      - SWARM_USER=Van
      - SWARM_PASSWD=pass12349ers!
      - SWARM_HOST=helix-swarm
      - SWARM_REDIS=helix-redis
      - SWARM_REDIS_PORT=7379

        # If set to 'y', then extensions will be installed even if they already
        # exist, overwriting existing configuration.
      - SWARM_FORCE_EXT=y
    networks:
      - perforce_network


  helix-redis:
    container_name: Perforce-Swarm-Redis
    image: "redis"
    hostname: helix-redis
    domainname: helix
    command: redis-server --protected-mode no --port 7379 --appendonly yes
    volumes:
      - /mnt/user/appdata/perforce-swarm/redis-data:/data
    networks:
      - perforce_network